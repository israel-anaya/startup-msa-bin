apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: startup
  labels:
    app: logstash
spec:
  selector:
    app: logstash
  type: NodePort
  ports:
    - port: 5044
      targetPort: 5044
      nodePort: 30044
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: startup
  labels:
    app: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:7.10.1
        imagePullPolicy: IfNotPresent
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        envFrom:
        - configMapRef:
            name: logstash-config
        resources:
          limits:
            memory: 1024Mi
          requests:
            memory: 512Mi
        ports:
        - name: http-service
          containerPort: 5044
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: http-service
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: http-service
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - mountPath: /usr/share/logstash/pipeline/
          name: startup-logstash-config
      volumes:
      - name: startup-logstash-config
        configMap:
          name: startup-logstash-config
          items:
          - key: "logstash.conf"
            path: "logstash.conf"
          